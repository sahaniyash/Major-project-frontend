export const clusteringModels = {
  agglomerative_clustering: {
    n_clusters: { type: "int", default: 2, min: 1 },
    metric: { type: ["euclidean", "l1", "l2", "manhattan", "cosine", "precomputed"], default: "euclidean" },
    memory: { type: ["str", "None"], default: null },
    connectivity: { type: ["array", "None"], default: null },
    compute_full_tree: { type: ["auto", "bool"], default: "auto" },
    linkage: { type: ["ward", "complete", "average", "single"], default: "ward" },
    distance_threshold: { type: ["float", "None"], default: null, min: 0 },
    compute_distances: { type: "bool", default: false },
  },
  birch_clustering: {
    threshold: { type: "float", default: 0.5, min: 0 },
    branching_factor: { type: "int", default: 50, min: 1 },
    n_clusters: { type: ["int", "None"], default: 3, min: 1 },
    compute_labels: { type: "bool", default: true },
    copy: { type: "bool", default: true },
  },
  dbscan: {
    eps: { type: "float", default: 0.5, min: 0 },
    min_samples: { type: "int", default: 5, min: 1 },
    metric: { type: ["euclidean", "l1", "l2", "manhattan", "cosine", "precomputed"], default: "euclidean" },
    metric_params: { type: ["dict", "None"], default: null },
    algorithm: { type: ["auto", "ball_tree", "kd_tree", "brute"], default: "auto" },
    leaf_size: { type: "int", default: 30, min: 1 },
    p: { type: ["float", "None"], default: null, min: 0 },
    n_jobs: { type: ["int", "None"], default: null },
  },
  k_means_clustering: {
    n_clusters: { type: "int", default: 8, min: 1 },
    init: { type: ["k-means++", "random", "array"], default: "k-means++" },
    n_init: { type: ["auto", "int"], default: "auto", min: 1 },
    max_iter: { type: "int", default: 300, min: 1 },
    tol: { type: "float", default: 0.0001, min: 0 },
    verbose: { type: "int", default: 0, min: 0 },
    random_state: { type: ["int", "None"], default: null },
    copy_x: { type: "bool", default: true },
    algorithm: { type: ["lloyd", "elkan"], default: "lloyd" },
  },
  mean_shift_clustering: {
    bandwidth: { type: ["float", "None"], default: null, min: 0 },
    seeds: { type: ["array", "None"], default: null },
    bin_seeding: { type: "bool", default: false },
    min_bin_freq: { type: "int", default: 1, min: 1 },
    cluster_all: { type: "bool", default: true },
    n_jobs: { type: ["int", "None"], default: null },
    max_iter: { type: "int", default: 300, min: 1 },
  },
  mini_batch_kmeans: {
    n_clusters: { type: "int", default: 8, min: 1 },
    init: { type: ["k-means++", "random", "array"], default: "k-means++" },
    max_iter: { type: "int", default: 100, min: 1 },
    batch_size: { type: "int", default: 1024, min: 1 },
    verbose: { type: "int", default: 0, min: 0 },
    compute_labels: { type: "bool", default: true },
    random_state: { type: ["int", "None"], default: null },
    tol: { type: "float", default: 0.0, min: 0 },
    max_no_improvement: { type: ["int", "None"], default: 10, min: 0 },
    init_size: { type: ["int", "None"], default: null, min: 1 },
    n_init: { type: ["auto", "int"], default: "auto", min: 1 },
    reassignment_ratio: { type: "float", default: 0.01, min: 0 },
  },
  spectral_clustering: {
    n_clusters: { type: "int", default: 8, min: 1 },
    eigen_solver: { type: ["arpack", "lobpcg", "amg", "None"], default: null },
    n_components: { type: ["int", "None"], default: null, min: 1 },
    random_state: { type: ["int", "None"], default: null },
    n_init: { type: "int", default: 10, min: 1 },
    gamma: { type: "float", default: 1.0, min: 0 },
    affinity: { type: ["rbf", "nearest_neighbors", "precomputed"], default: "rbf" },
    n_neighbors: { type: "int", default: 10, min: 1 },
    eigen_tol: { type: ["float", "auto"], default: "auto", min: 0 },
    assign_labels: { type: ["kmeans", "discretize", "cluster_qr"], default: "kmeans" },
    degree: { type: "int", default: 3, min: 1 },
    coef0: { type: "float", default: 1, min: 0 },
    kernel_params: { type: ["dict", "None"], default: null },
    n_jobs: { type: ["int", "None"], default: null },
    verbose: { type: "bool", default: false },
  },
};