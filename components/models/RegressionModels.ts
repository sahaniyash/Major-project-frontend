export const regressionModels = {
  adaboost_regressor: {
    estimator: { type: ["estimator", "None"], default: null },
    n_estimators: { type: "int", default: 50, min: 1 },
    learning_rate: { type: "float", default: 1.0, min: 0 },
    loss: { type: ["linear", "square", "exponential"], default: "linear" },
    random_state: { type: ["int", "None"], default: null },
  },
  elastic_net: {
    alpha: { type: "float", default: 1.0, min: 0 },
    l1_ratio: { type: "float", default: 0.5, min: 0, max: 1.0 },
    fit_intercept: { type: "bool", default: true },
    precompute: { type: ["bool", "array"], default: false },
    max_iter: { type: "int", default: 1000, min: 1 },
    copy_X: { type: "bool", default: true },
    tol: { type: "float", default: 0.0001, min: 0 },
    warm_start: { type: "bool", default: false },
    positive: { type: "bool", default: false },
    random_state: { type: ["int", "None"], default: null },
    selection: { type: ["cyclic", "random"], default: "cyclic" },
  },
  lasso: {
    alpha: { type: "float", default: 1.0, min: 0 },
    fit_intercept: { type: "bool", default: true },
    precompute: { type: ["bool", "array"], default: false },
    copy_X: { type: "bool", default: true },
    max_iter: { type: "int", default: 1000, min: 1 },
    tol: { type: "float", default: 0.0001, min: 0 },
    warm_start: { type: "bool", default: false },
    positive: { type: "bool", default: false },
    random_state: { type: ["int", "None"], default: null },
    selection: { type: ["cyclic", "random"], default: "cyclic" },
  },
  linear_regression: {
    fit_intercept: { type: "bool", default: true },
    copy_X: { type: "bool", default: true },
    n_jobs: { type: ["int", "None"], default: null },
    positive: { type: "bool", default: false },
  },
  ridge: {
    alpha: { type: "float", default: 1.0, min: 0 },
    fit_intercept: { type: "bool", default: true },
    copy_X: { type: "bool", default: true },
    max_iter: { type: ["int", "None"], default: null, min: 1 },
    tol: { type: "float", default: 0.0001, min: 0 },
    solver: { type: ["auto", "svd", "cholesky", "lsqr", "sparse_cg", "sag", "saga"], default: "auto" },
    positive: { type: "bool", default: false },
    random_state: { type: ["int", "None"], default: null },
  },
  svr: {
    kernel: { type: ["linear", "poly", "rbf", "sigmoid"], default: "rbf" },
    degree: { type: "int", default: 3, min: 1 },
    gamma: { type: ["scale", "auto", "float"], default: "scale" },
    coef0: { type: "float", default: 0.0, min: 0 },
    tol: { type: "float", default: 0.001, min: 0 },
    C: { type: "float", default: 1.0, min: 0 },
    epsilon: { type: "float", default: 0.1, min: 0 },
    shrinking: { type: "bool", default: true },
    cache_size: { type: "float", default: 200, min: 0 },
    verbose: { type: "bool", default: false },
    max_iter: { type: "int", default: -1 },
  },
};